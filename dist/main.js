// Generated by Haxe 4.0.2
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
DateTools.__name__ = true;
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new js__$Boot_HaxeError("Date.format %" + e + "- not implemented yet.");
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len1 = f.length - p;
	r_b += len1 == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len1);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	require("dotenv").config();
	var cors = require("cors");
	var connection = Main.mysqlDB.createConnection({ host : process.env["MYSQL_ADDON_HOST"] != null ? process.env["MYSQL_ADDON_HOST"] : process.env["DB_HOST"], user : process.env["MYSQL_ADDON_USER"] != null ? process.env["MYSQL_ADDON_USER"] : process.env["DB_USER"], password : process.env["MYSQL_ADDON_PASSWORD"] != null ? process.env["MYSQL_ADDON_PASSWORD"] : process.env["DB_PASSWORD"], database : process.env["MYSQL_ADDON_DB"] != null ? process.env["MYSQL_ADDON_DB"] : process.env["DB_NAME"]});
	connection.connect();
	var server = new js_npm_Express();
	server.use(js_npm_express_BodyParser.json({ limit : "5mb", type : "application/json"}));
	server.use(cors({ credentials : true, origin : function(req,callback) {
		callback(null,true);
	}}));
	server.use(new js_npm_express_Static("wsclient"));
	server.use("/doc",new js_npm_express_Static("generated-doc"));
	server.use(new js_npm_express_Session({ secret : "shhhh, very secret", resave : true, saveUninitialized : true}));
	var expressWs = (require("express-ws"))(server);
	expressWs.app.ws("/",function(socket,req1) {
		var username = null;
		console.log("src/Main.hx:74:","User connected");
		socket.on("close",function() {
			Main.sockets.remove(socket);
			if(username == null) {
				return;
			}
			var _g_head = Main.sockets.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var remoteSocket = val;
				remoteSocket.send(username + " disconnected !",null);
			}
		});
		socket.on("message",function(msg) {
			console.log("src/Main.hx:103:","message: " + Std.string(msg));
			if(username == null) {
				var _this = Main.tickets;
				var key = msg;
				if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
					var _this1 = Main.tickets;
					var key1 = msg;
					username = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
					Main.tickets.remove(msg);
					Main.sockets.add(socket);
					socket.send("Bienvenue sur le chat " + username,null);
					console.log("src/Main.hx:114:","User authenticated : " + username);
				} else {
					console.log("src/Main.hx:116:","Please provide a ticket first to log in.");
					socket.send("Please provide a ticket first to log in.",null);
					socket.close();
				}
				return;
			}
			var _g_head1 = Main.sockets.h;
			while(_g_head1 != null) {
				var val1 = _g_head1.item;
				_g_head1 = _g_head1.next;
				var remoteSocket1 = val1;
				remoteSocket1.send(username + " : " + Std.string(msg),null);
			}
		});
	});
	server.get("/random",function(req2,res) {
		res.writeHead(200,{ "Content-Type" : "text/plain"});
		res.end(Std.string(Math.random()));
	});
	server.post("/login",function(expressReq,res1) {
		var req3 = expressReq;
		var _g = req3.body;
		var _g2 = _g.username;
		var _g1 = _g.password;
		var uname = _g2;
		var pwd = _g1;
		if(uname == null || pwd == null) {
			req3.session.token = null;
			res1.send(400,"Bad Request");
		} else {
			var username1 = _g2;
			var password = _g1;
			db_User.userExists(connection,username1,password,function(result) {
				switch(result._hx_index) {
				case 0:
					db_Token.createToken(connection,username1,59,function(createTokenResult) {
						switch(createTokenResult._hx_index) {
						case 0:
							var token = createTokenResult.data;
							req3.session.token = token;
							res1.send(200,"OK");
							break;
						case 1:
							var err = createTokenResult.err;
							console.log("src/Main.hx:186:",err);
							res1.send(500,err.message);
							break;
						}
						return;
					});
					break;
				case 1:case 2:
					req3.session.token = null;
					res1.send(401,"Unauthorized");
					break;
				case 3:
					var err1 = result.err;
					console.log("src/Main.hx:178:",err1);
					res1.send(500,err1.message);
					break;
				}
				return;
			});
		}
	});
	server.post("/subscribe",function(expressReq1,res2) {
		var req4 = expressReq1;
		var _g3 = req4.body;
		var _g31 = _g3.username;
		var _g21 = _g3.password;
		var _g11 = _g3.email;
		var username2 = _g31;
		var password1 = _g21;
		var email = _g11;
		if(username2 == null || password1 == null || email == null) {
			res2.send(400,"Username and password and email must be provided");
		} else {
			var username3 = _g31;
			var password2 = _g21;
			var email1 = _g11;
			db_User.userExists(connection,username3,password2,function(result1) {
				switch(result1._hx_index) {
				case 0:case 2:
					res2.send(500,"User already exists, please use another login");
					break;
				case 1:
					db_User.createUser(connection,{ username : username3, password : password2, email : email1},function(response) {
						switch(response._hx_index) {
						case 0:
							var _g4 = response.data;
							res2.send(200,"OK");
							break;
						case 1:
							var err2 = response.err;
							res2.send(500,"An error occured\n" + err2.message);
							break;
						}
						return;
					});
					break;
				case 3:
					var err3 = result1.err;
					console.log("src/Main.hx:230:",err3);
					res2.send(500,err3.message);
					break;
				}
				return;
			});
		}
	});
	server.post("/logout",function(expressReq2,res3) {
		var req5 = expressReq2;
		req5.session.token = null;
		res3.send(200,"OK");
		return;
	});
	server.get("/status",function(expressReq3,res4) {
		var req6 = expressReq3;
		if(req6.session.token == null) {
			res4.send(200,"Visiteur");
			return;
		}
		db_Token.fromToken(connection,req6.session.token,function(result2) {
			switch(result2._hx_index) {
			case 0:
				var login = result2.login;
				res4.send(200,"Bonjour " + login);
				break;
			case 1:
				res4.send(401,"Token invalide. Vous devez vous re-connecter.");
				break;
			case 2:
				var err4 = result2.err;
				res4.send(500,err4);
				break;
			}
			return;
		});
	});
	server.post("/save",function(expressReq4,res5) {
		var req7 = expressReq4;
		if(req7.session.token == null) {
			res5.send(401,"Token invalide. Vous devez vous re-connecter.");
			return;
		}
		db_Token.fromToken(connection,req7.session.token,function(result3) {
			switch(result3._hx_index) {
			case 0:
				var login1 = result3.login;
				db_User.save(connection,login1,req7.body,function(result4) {
					switch(result4._hx_index) {
					case 0:
						var _g5 = result4.data;
						res5.send(200,"OK");
						break;
					case 1:
						var err5 = result4.err;
						res5.send(500,"An error occured\n" + err5.message);
						break;
					}
					return;
				});
				break;
			case 1:
				res5.send(401,"Token invalide. Vous devez vous re-connecter.");
				break;
			case 2:
				var err6 = result3.err;
				res5.send(500,err6);
				break;
			}
			return;
		});
	});
	server.post("/load",function(expressReq5,res6) {
		var req8 = expressReq5;
		if(req8.session.token == null) {
			res6.send(401,"Token invalide. Vous devez vous re-connecter.");
			return;
		}
		db_Token.fromToken(connection,req8.session.token,function(result5) {
			switch(result5._hx_index) {
			case 0:
				var login2 = result5.login;
				db_User.load(connection,login2,function(result6) {
					switch(result6._hx_index) {
					case 0:
						var data = result6.data;
						res6.send(200,data);
						break;
					case 1:
						var err7 = result6.err;
						res6.send(500,"An error occured\n" + err7.message);
						break;
					}
					return;
				});
				break;
			case 1:
				res6.send(401,"Token invalide. Vous devez vous re-connecter.");
				break;
			case 2:
				var err8 = result5.err;
				res6.send(500,err8);
				break;
			}
			return;
		});
	});
	server.get("/wsTicket",function(expressReq6,res7) {
		var req9 = expressReq6;
		if(req9.session.token == null) {
			res7.send(401,"Token invalide. Vous devez vous re-connecter.");
			return;
		}
		db_Token.fromToken(connection,req9.session.token,function(result7) {
			switch(result7._hx_index) {
			case 0:
				var login3 = result7.login;
				var ticket = HxOverrides.substr(haxe_crypto_BCrypt.generateSalt(),0,32);
				var _this2 = Main.tickets;
				if(__map_reserved[ticket] != null) {
					_this2.setReserved(ticket,login3);
				} else {
					_this2.h[ticket] = login3;
				}
				res7.send(200,ticket);
				break;
			case 1:
				res7.send(401,"Token invalide. Vous devez vous re-connecter.");
				break;
			case 2:
				var err9 = result7.err;
				res7.send(500,err9);
				break;
			}
			return;
		});
	});
	var port = 1337;
	if(process.env["PORT"] != null) {
		port = Std.parseInt(process.env["PORT"]);
	}
	server.listen(port);
	console.log("src/Main.hx:400:","Server running at https://localhost:" + port + "/");
	var onSigterm = function() {
		console.log("src/Main.hx:402:","Got SIGTERM. Graceful shutdown start");
		connection.end();
	};
	process.on("SIGTERM",onSigterm);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
var haxe_io_Output = function() { };
haxe_io_Output.__name__ = true;
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
_$Sys_FileOutput.__name__ = true;
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCodePoint(c));
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		return js_node_Fs.writeSync(this.fd,js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length),pos,len);
	}
	,writeString: function(s,encoding) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,flush: function() {
		js_node_Fs.fsyncSync(this.fd);
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
});
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
var _$Sys_FileInput = function(fd) {
	this.fd = fd;
};
_$Sys_FileInput.__name__ = true;
_$Sys_FileInput.__super__ = haxe_io_Input;
_$Sys_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		try {
			js_node_Fs.readSync(this.fd,buf,0,1,null);
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		try {
			return js_node_Fs.readSync(this.fd,buf,pos,len,null);
		} catch( e ) {
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
});
var UserExistsResult = $hxEnums["UserExistsResult"] = { __ename__ : true, __constructs__ : ["Yes","Missing","WrongPassword","Error"]
	,Yes: {_hx_index:0,__enum__:"UserExistsResult",toString:$estr}
	,Missing: {_hx_index:1,__enum__:"UserExistsResult",toString:$estr}
	,WrongPassword: {_hx_index:2,__enum__:"UserExistsResult",toString:$estr}
	,Error: ($_=function(err) { return {_hx_index:3,err:err,__enum__:"UserExistsResult",toString:$estr}; },$_.__params__ = ["err"],$_)
};
var FromTokenResult = $hxEnums["FromTokenResult"] = { __ename__ : true, __constructs__ : ["User","Missing","Error"]
	,User: ($_=function(login) { return {_hx_index:0,login:login,__enum__:"FromTokenResult",toString:$estr}; },$_.__params__ = ["login"],$_)
	,Missing: {_hx_index:1,__enum__:"FromTokenResult",toString:$estr}
	,Error: ($_=function(err) { return {_hx_index:2,err:err,__enum__:"FromTokenResult",toString:$estr}; },$_.__params__ = ["err"],$_)
};
var QueryResult = $hxEnums["QueryResult"] = { __ename__ : true, __constructs__ : ["OK","Error"]
	,OK: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"QueryResult",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Error: ($_=function(err) { return {_hx_index:1,err:err,__enum__:"QueryResult",toString:$estr}; },$_.__params__ = ["err"],$_)
};
var db_Token = function() { };
db_Token.__name__ = true;
db_Token.createToken = function(connection,login,durationInMinute,callback) {
	if(durationInMinute == null) {
		durationInMinute = 0;
	}
	var token = HxOverrides.substr(haxe_crypto_BCrypt.generateSalt(),0,32);
	var durationInMs = durationInMinute * 60 * 1000;
	var tmp = durationInMinute <= 0 ? "DEFAULT" : db_Token.formatDateForMySQL(new Date(new Date().getTime() + durationInMs));
	connection.query("INSERT INTO token(id, user_id, expiration)  VALUES(?,?,?)",[token,login,tmp],function(error,results,fields) {
		if(error != null) {
			callback(QueryResult.Error(error));
			return;
		}
		callback(QueryResult.OK(token));
		return;
	});
};
db_Token.fromToken = function(connection,token,callback) {
	connection.query("DELETE FROM token WHERE expiration < now()",null,function(error,results,fields) {
		connection.query("SELECT u.login, t.expiration FROM user u INNER JOIN token t ON u.login = t.user_id WHERE t.id = ?",[token],function(error1,results1,fields1) {
			if(error1 != null) {
				callback(FromTokenResult.Error(error1));
				return;
			}
			if(results1.length <= 0) {
				callback(FromTokenResult.Missing);
				return;
			}
			callback(FromTokenResult.User(results1[0].login));
			return;
		});
		return;
	});
};
db_Token.formatDateForMySQL = function(date) {
	return DateTools.format(date,"%Y-%m-%d_%H:%M:%S");
};
var db_User = function() { };
db_User.__name__ = true;
db_User.userExists = function(connection,uname,pwd,callback) {
	connection.query("SELECT login, password FROM user WHERE login = ?",[uname],function(error,results,fields) {
		if(error != null) {
			callback(UserExistsResult.Error(error));
			return;
		}
		if(results.length <= 0) {
			callback(UserExistsResult.Missing);
			return;
		}
		try {
			var tmp = haxe_crypto_BCrypt.verify(pwd + db_User.PEPPER,results[0].password) ? UserExistsResult.Yes : UserExistsResult.WrongPassword;
			callback(tmp);
		} catch( e ) {
			console.log("src/db/User.hx:31:",((e) instanceof js__$Boot_HaxeError) ? e.val : e);
			callback(UserExistsResult.WrongPassword);
		}
		return;
	});
};
db_User.createUser = function(connection,user,callback) {
	var encodedPassword = haxe_crypto_BCrypt.encode(user.password + db_User.PEPPER,haxe_crypto_BCrypt.generateSalt());
	connection.query("INSERT INTO user(login, password, email)  VALUES(?,?,?)",[user.username,encodedPassword,user.email],function(error,results,fields) {
		if(error != null) {
			callback(QueryResult.Error(error));
			return;
		}
		callback(QueryResult.OK(true));
		return;
	});
};
db_User.save = function(connection,login,data,callback) {
	var tmp = JSON.stringify(data);
	connection.query("UPDATE user SET data=? WHERE login = ?",[tmp,login],function(error,results,fields) {
		if(error != null) {
			callback(QueryResult.Error(error));
			return;
		}
		callback(QueryResult.OK(results));
		return;
	});
};
db_User.load = function(connection,login,callback) {
	connection.query("SELECT data FROM user WHERE login = ?",[login],function(error,results,fields) {
		if(error != null) {
			callback(QueryResult.Error(error));
			return;
		}
		callback(QueryResult.OK(results[0].data));
		return;
	});
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_crypto_BCrypt = function() {
	haxe_crypto_BCrypt.BF_CRYPT_CIPHERTEXT = haxe_crypto_BCrypt.BF_CRYPT_CIPHERTEXT_ARRAY.slice(0);
};
haxe_crypto_BCrypt.__name__ = true;
haxe_crypto_BCrypt.encode = function(password,salt) {
	var bcrypt = new haxe_crypto_BCrypt();
	var passHashed = bcrypt.hashPassword(password,salt);
	return passHashed;
};
haxe_crypto_BCrypt.generateSalt = function(rounds,saltRevision) {
	if(saltRevision == null) {
		saltRevision = "2b";
	}
	if(rounds == null) {
		rounds = 10;
	}
	if(rounds < 4 || rounds > 31) {
		throw new js__$Boot_HaxeError("Salt rounds should be between 4 and 31");
	}
	var rng = new haxe_io_Bytes(new ArrayBuffer(16));
	var v = Std.random(256) - 128;
	rng.b[0] = v;
	var v1 = Std.random(256) - 128;
	rng.b[1] = v1;
	var v2 = Std.random(256) - 128;
	rng.b[2] = v2;
	var v3 = Std.random(256) - 128;
	rng.b[3] = v3;
	var v4 = Std.random(256) - 128;
	rng.b[4] = v4;
	var v5 = Std.random(256) - 128;
	rng.b[5] = v5;
	var v6 = Std.random(256) - 128;
	rng.b[6] = v6;
	var v7 = Std.random(256) - 128;
	rng.b[7] = v7;
	var v8 = Std.random(256) - 128;
	rng.b[8] = v8;
	var v9 = Std.random(256) - 128;
	rng.b[9] = v9;
	var v10 = Std.random(256) - 128;
	rng.b[10] = v10;
	var v11 = Std.random(256) - 128;
	rng.b[11] = v11;
	var v12 = Std.random(256) - 128;
	rng.b[12] = v12;
	var v13 = Std.random(256) - 128;
	rng.b[13] = v13;
	var v14 = Std.random(256) - 128;
	rng.b[14] = v14;
	var v15 = Std.random(256) - 128;
	rng.b[15] = v15;
	var salt = "$" + saltRevision + "$" + (rounds < 10 ? "0" : "") + rounds + "$";
	salt += haxe_crypto_BCrypt.encode_base64(rng);
	return salt;
};
haxe_crypto_BCrypt.verify = function(plaintext,hash) {
	var bcrypt = new haxe_crypto_BCrypt();
	var candidate = bcrypt.hashPassword(plaintext,hash);
	if(candidate.length != hash.length) {
		return false;
	}
	var b = 0;
	var _g = 0;
	var _g1 = candidate.length;
	while(_g < _g1) {
		var i = _g++;
		b |= HxOverrides.cca(hash,i) ^ HxOverrides.cca(candidate,i);
	}
	return b == 0;
};
haxe_crypto_BCrypt.key = function(kBytes) {
	haxe_crypto_BCrypt.woffset = 0;
	var lr = [0,0].slice(0);
	var _g = 0;
	var _g1 = haxe_crypto_BCrypt.pBox;
	var val = haxe_crypto_BCrypt.extractWord(kBytes);
	_g1[_g] = _g1[_g] ^ val;
	var _g2 = 1;
	var _g11 = haxe_crypto_BCrypt.pBox;
	var val1 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g11[_g2] = _g11[_g2] ^ val1;
	var _g3 = 2;
	var _g12 = haxe_crypto_BCrypt.pBox;
	var val2 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g12[_g3] = _g12[_g3] ^ val2;
	var _g4 = 3;
	var _g13 = haxe_crypto_BCrypt.pBox;
	var val3 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g13[_g4] = _g13[_g4] ^ val3;
	var _g5 = 4;
	var _g14 = haxe_crypto_BCrypt.pBox;
	var val4 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g14[_g5] = _g14[_g5] ^ val4;
	var _g6 = 5;
	var _g15 = haxe_crypto_BCrypt.pBox;
	var val5 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g15[_g6] = _g15[_g6] ^ val5;
	var _g7 = 6;
	var _g16 = haxe_crypto_BCrypt.pBox;
	var val6 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g16[_g7] = _g16[_g7] ^ val6;
	var _g8 = 7;
	var _g17 = haxe_crypto_BCrypt.pBox;
	var val7 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g17[_g8] = _g17[_g8] ^ val7;
	var _g9 = 8;
	var _g18 = haxe_crypto_BCrypt.pBox;
	var val8 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g18[_g9] = _g18[_g9] ^ val8;
	var _g10 = 9;
	var _g19 = haxe_crypto_BCrypt.pBox;
	var val9 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g19[_g10] = _g19[_g10] ^ val9;
	var _g20 = 10;
	var _g110 = haxe_crypto_BCrypt.pBox;
	var val10 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g110[_g20] = _g110[_g20] ^ val10;
	var _g21 = 11;
	var _g111 = haxe_crypto_BCrypt.pBox;
	var val11 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g111[_g21] = _g111[_g21] ^ val11;
	var _g22 = 12;
	var _g112 = haxe_crypto_BCrypt.pBox;
	var val12 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g112[_g22] = _g112[_g22] ^ val12;
	var _g23 = 13;
	var _g113 = haxe_crypto_BCrypt.pBox;
	var val13 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g113[_g23] = _g113[_g23] ^ val13;
	var _g24 = 14;
	var _g114 = haxe_crypto_BCrypt.pBox;
	var val14 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g114[_g24] = _g114[_g24] ^ val14;
	var _g25 = 15;
	var _g115 = haxe_crypto_BCrypt.pBox;
	var val15 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g115[_g25] = _g115[_g25] ^ val15;
	var _g26 = 16;
	var _g116 = haxe_crypto_BCrypt.pBox;
	var val16 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g116[_g26] = _g116[_g26] ^ val16;
	var _g27 = 17;
	var _g117 = haxe_crypto_BCrypt.pBox;
	var val17 = haxe_crypto_BCrypt.extractWord(kBytes);
	_g117[_g27] = _g117[_g27] ^ val17;
	var i = 0;
	while(i < 18) {
		haxe_crypto_BCrypt.encipher(lr,0);
		haxe_crypto_BCrypt.pBox[i] = lr[0];
		haxe_crypto_BCrypt.pBox[i + 1] = lr[1];
		i += 2;
	}
	i = 0;
	while(i < 1024) {
		haxe_crypto_BCrypt.encipher(lr,0);
		haxe_crypto_BCrypt.sBox[i] = lr[0];
		haxe_crypto_BCrypt.sBox[i + 1] = lr[1];
		i += 2;
	}
};
haxe_crypto_BCrypt.extractWord = function(data) {
	var word = 0;
	word = word << 8 | data.b[haxe_crypto_BCrypt.woffset] & 255;
	haxe_crypto_BCrypt.woffset = (haxe_crypto_BCrypt.woffset + 1) % data.length;
	word = word << 8 | data.b[haxe_crypto_BCrypt.woffset] & 255;
	haxe_crypto_BCrypt.woffset = (haxe_crypto_BCrypt.woffset + 1) % data.length;
	word = word << 8 | data.b[haxe_crypto_BCrypt.woffset] & 255;
	haxe_crypto_BCrypt.woffset = (haxe_crypto_BCrypt.woffset + 1) % data.length;
	word = word << 8 | data.b[haxe_crypto_BCrypt.woffset] & 255;
	haxe_crypto_BCrypt.woffset = (haxe_crypto_BCrypt.woffset + 1) % data.length;
	return word;
};
haxe_crypto_BCrypt.f = function(x) {
	return (haxe_crypto_BCrypt.sBox[x >>> 24] + haxe_crypto_BCrypt.sBox[256 | x >>> 16 & 255] ^ haxe_crypto_BCrypt.sBox[512 | x >>> 8 & 255]) + haxe_crypto_BCrypt.sBox[768 | x & 255];
};
haxe_crypto_BCrypt.encipher = function(block,offset) {
	var xl = block[offset];
	var xr = block[offset + 1];
	xl ^= haxe_crypto_BCrypt.pBox[0];
	var i = 0;
	while(i <= 14) {
		++i;
		xr ^= (haxe_crypto_BCrypt.sBox[xl >>> 24] + haxe_crypto_BCrypt.sBox[256 | xl >>> 16 & 255] ^ haxe_crypto_BCrypt.sBox[512 | xl >>> 8 & 255]) + haxe_crypto_BCrypt.sBox[768 | xl & 255] ^ haxe_crypto_BCrypt.pBox[i];
		++i;
		xl ^= (haxe_crypto_BCrypt.sBox[xr >>> 24] + haxe_crypto_BCrypt.sBox[256 | xr >>> 16 & 255] ^ haxe_crypto_BCrypt.sBox[512 | xr >>> 8 & 255]) + haxe_crypto_BCrypt.sBox[768 | xr & 255] ^ haxe_crypto_BCrypt.pBox[i];
	}
	block[offset] = xr ^ haxe_crypto_BCrypt.pBox[17];
	block[offset + 1] = xl;
};
haxe_crypto_BCrypt.encode_base64 = function(bytes) {
	return new haxe_crypto_BaseCode(haxe_crypto_BCrypt.BYTES).encodeBytes(bytes).toString();
};
haxe_crypto_BCrypt.decode_base64 = function(str) {
	return new haxe_crypto_BaseCode(haxe_crypto_BCrypt.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
haxe_crypto_BCrypt.prototype = {
	hashPassword: function(password,salt) {
		var offset = 0;
		var minor = null;
		if(salt.length < 16) {
			throw new js__$Boot_HaxeError("Salt length is too short");
		}
		if(salt.charAt(0) != "$" || salt.charAt(1) != "2") {
			throw new js__$Boot_HaxeError("Invalid salt version");
		}
		if(salt.charAt(2) == "$") {
			offset = 3;
		} else {
			minor = salt.charAt(2);
			if(minor != "y" && minor != "x" && minor != "a" && minor != "b" || salt.charAt(3) != "$") {
				throw new js__$Boot_HaxeError("Invalid salt revision");
			}
			offset = 4;
		}
		if(HxOverrides.cca(salt,offset + 2) > 36) {
			throw new js__$Boot_HaxeError("Missing salt rounds");
		}
		var rounds = Std.parseInt(HxOverrides.substr(salt,offset,2));
		var realSalt = HxOverrides.substr(salt,offset + 3,22);
		var isMinor = minor != null;
		var hashedPassword = "$2" + (isMinor ? minor : "") + "$";
		hashedPassword += (rounds < 10 ? "0" : "") + rounds + "$";
		var saltBytes = haxe_crypto_BCrypt.decode_base64(realSalt);
		var passwordBytes = haxe_io_Bytes.ofString(password + (isMinor ? String.fromCodePoint(0) : ""));
		var hashedBytes = this.cryptRaw(passwordBytes,saltBytes,rounds);
		if(hashedBytes == null) {
			return null;
		}
		var hashed = haxe_crypto_BCrypt.encode_base64(hashedBytes);
		var saltString = haxe_crypto_BCrypt.encode_base64(saltBytes);
		return hashedPassword + saltString + hashed;
	}
	,cryptRaw: function(passwordBytes,saltBytes,numberOfRounds) {
		if(saltBytes.length != 16) {
			throw new js__$Boot_HaxeError("Salt length should be 16 bytes");
		}
		if(numberOfRounds < 4 || numberOfRounds > 31) {
			throw new js__$Boot_HaxeError("Number of rounds should be between 4 and 31 (included)");
		}
		var rounds = 1 << numberOfRounds;
		var cipherText = haxe_crypto_BCrypt.BF_CRYPT_CIPHERTEXT_ARRAY.slice(0);
		var clen = cipherText.length;
		haxe_crypto_BCrypt.pBox = haxe_crypto_BCrypt.KP_ARRAY.slice(0);
		haxe_crypto_BCrypt.sBox = haxe_crypto_BCrypt.KS_ARRAY.slice(0);
		this.enhanceKeySchedule(passwordBytes,saltBytes);
		var _g = 0;
		var _g1 = rounds;
		while(_g < _g1) {
			var i = _g++;
			haxe_crypto_BCrypt.key(passwordBytes);
			haxe_crypto_BCrypt.key(saltBytes);
		}
		var hclen = clen >> 1;
		var _g2 = 0;
		while(_g2 < 64) {
			var i1 = _g2++;
			var _g21 = 0;
			var _g3 = hclen;
			while(_g21 < _g3) {
				var j = _g21++;
				haxe_crypto_BCrypt.encipher(cipherText,j << 1);
			}
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(clen * 4));
		var j1 = 0;
		var _g31 = 0;
		var _g4 = clen;
		while(_g31 < _g4) {
			var i2 = _g31++;
			b.b[j1++] = cipherText[i2] >>> 24 & 255;
			b.b[j1++] = cipherText[i2] >>> 16 & 255;
			b.b[j1++] = cipherText[i2] >>> 8 & 255;
			b.b[j1++] = cipherText[i2] & 255;
		}
		return b.sub(0,23);
	}
	,enhanceKeySchedule: function(password,salt) {
		haxe_crypto_BCrypt.woffset = 0;
		var lr = [0,0].slice(0);
		var _g = 0;
		var _g1 = haxe_crypto_BCrypt.pBox;
		var val = haxe_crypto_BCrypt.extractWord(password);
		_g1[_g] = _g1[_g] ^ val;
		var _g2 = 1;
		var _g11 = haxe_crypto_BCrypt.pBox;
		var val1 = haxe_crypto_BCrypt.extractWord(password);
		_g11[_g2] = _g11[_g2] ^ val1;
		var _g3 = 2;
		var _g12 = haxe_crypto_BCrypt.pBox;
		var val2 = haxe_crypto_BCrypt.extractWord(password);
		_g12[_g3] = _g12[_g3] ^ val2;
		var _g4 = 3;
		var _g13 = haxe_crypto_BCrypt.pBox;
		var val3 = haxe_crypto_BCrypt.extractWord(password);
		_g13[_g4] = _g13[_g4] ^ val3;
		var _g5 = 4;
		var _g14 = haxe_crypto_BCrypt.pBox;
		var val4 = haxe_crypto_BCrypt.extractWord(password);
		_g14[_g5] = _g14[_g5] ^ val4;
		var _g6 = 5;
		var _g15 = haxe_crypto_BCrypt.pBox;
		var val5 = haxe_crypto_BCrypt.extractWord(password);
		_g15[_g6] = _g15[_g6] ^ val5;
		var _g7 = 6;
		var _g16 = haxe_crypto_BCrypt.pBox;
		var val6 = haxe_crypto_BCrypt.extractWord(password);
		_g16[_g7] = _g16[_g7] ^ val6;
		var _g8 = 7;
		var _g17 = haxe_crypto_BCrypt.pBox;
		var val7 = haxe_crypto_BCrypt.extractWord(password);
		_g17[_g8] = _g17[_g8] ^ val7;
		var _g9 = 8;
		var _g18 = haxe_crypto_BCrypt.pBox;
		var val8 = haxe_crypto_BCrypt.extractWord(password);
		_g18[_g9] = _g18[_g9] ^ val8;
		var _g10 = 9;
		var _g19 = haxe_crypto_BCrypt.pBox;
		var val9 = haxe_crypto_BCrypt.extractWord(password);
		_g19[_g10] = _g19[_g10] ^ val9;
		var _g20 = 10;
		var _g110 = haxe_crypto_BCrypt.pBox;
		var val10 = haxe_crypto_BCrypt.extractWord(password);
		_g110[_g20] = _g110[_g20] ^ val10;
		var _g21 = 11;
		var _g111 = haxe_crypto_BCrypt.pBox;
		var val11 = haxe_crypto_BCrypt.extractWord(password);
		_g111[_g21] = _g111[_g21] ^ val11;
		var _g22 = 12;
		var _g112 = haxe_crypto_BCrypt.pBox;
		var val12 = haxe_crypto_BCrypt.extractWord(password);
		_g112[_g22] = _g112[_g22] ^ val12;
		var _g23 = 13;
		var _g113 = haxe_crypto_BCrypt.pBox;
		var val13 = haxe_crypto_BCrypt.extractWord(password);
		_g113[_g23] = _g113[_g23] ^ val13;
		var _g24 = 14;
		var _g114 = haxe_crypto_BCrypt.pBox;
		var val14 = haxe_crypto_BCrypt.extractWord(password);
		_g114[_g24] = _g114[_g24] ^ val14;
		var _g25 = 15;
		var _g115 = haxe_crypto_BCrypt.pBox;
		var val15 = haxe_crypto_BCrypt.extractWord(password);
		_g115[_g25] = _g115[_g25] ^ val15;
		var _g26 = 16;
		var _g116 = haxe_crypto_BCrypt.pBox;
		var val16 = haxe_crypto_BCrypt.extractWord(password);
		_g116[_g26] = _g116[_g26] ^ val16;
		var _g27 = 17;
		var _g117 = haxe_crypto_BCrypt.pBox;
		var val17 = haxe_crypto_BCrypt.extractWord(password);
		_g117[_g27] = _g117[_g27] ^ val17;
		var i = 0;
		haxe_crypto_BCrypt.woffset = 0;
		while(i < 18) {
			var _g28 = lr;
			var val18 = haxe_crypto_BCrypt.extractWord(salt);
			_g28[0] = _g28[0] ^ val18;
			var _g29 = lr;
			var val19 = haxe_crypto_BCrypt.extractWord(salt);
			_g29[1] = _g29[1] ^ val19;
			haxe_crypto_BCrypt.encipher(lr,0);
			haxe_crypto_BCrypt.pBox[i] = lr[0];
			haxe_crypto_BCrypt.pBox[i + 1] = lr[1];
			i += 2;
		}
		i = 0;
		while(i < 1024) {
			var _g30 = lr;
			var val20 = haxe_crypto_BCrypt.extractWord(salt);
			_g30[0] = _g30[0] ^ val20;
			var _g31 = lr;
			var val21 = haxe_crypto_BCrypt.extractWord(salt);
			_g31[1] = _g31[1] ^ val21;
			haxe_crypto_BCrypt.encipher(lr,0);
			haxe_crypto_BCrypt.sBox[i] = lr[0];
			haxe_crypto_BCrypt.sBox[i + 1] = lr[1];
			i += 2;
		}
	}
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
haxe_crypto_BaseCode.__name__ = true;
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = true;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
};
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_lib__$ArrayBuffer_ArrayBufferCompat = function() { };
js_lib__$ArrayBuffer_ArrayBufferCompat.__name__ = true;
js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var resultArray = new Uint8Array(u.byteLength);
	resultArray.set(u);
	return resultArray.buffer;
};
var js_node_Fs = require("fs");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_npm_Express = require("express");
var js_npm_express_BodyParser = require("body-parser");
var js_npm_express__$Route_Route_$Impl_$ = {};
js_npm_express__$Route_Route_$Impl_$.__name__ = true;
js_npm_express__$Route_Route_$Impl_$.fromEReg = function(e) {
	return e.r;
};
var js_npm_express_Session = require("express-session");
var js_npm_express_Static = require("express").static;
var js_npm_ws__$WebSocket_Data_$Impl_$ = {};
js_npm_ws__$WebSocket_Data_$Impl_$.__name__ = true;
js_npm_ws__$WebSocket_Data_$Impl_$.asBuffer = function(this1,ws) {
	if(ws.binaryType == "nodebuffer") {
		return this1;
	} else {
		throw new js__$Boot_HaxeError("Cannot get buffer when bufferType is " + ws.binaryType);
	}
};
js_npm_ws__$WebSocket_Data_$Impl_$.asArrayBuffer = function(this1,ws) {
	if(ws.binaryType == "arraybuffer") {
		return this1;
	} else {
		throw new js__$Boot_HaxeError("Cannot get buffer when bufferType is " + ws.binaryType);
	}
};
js_npm_ws__$WebSocket_Data_$Impl_$.asFragments = function(this1,ws) {
	if(ws.binaryType == "fragments") {
		return this1;
	} else {
		throw new js__$Boot_HaxeError("Cannot get fragments when bufferType is " + ws.binaryType);
	}
};
js_npm_ws__$WebSocket_Data_$Impl_$.isBinary = function(this1) {
	return typeof(this1) != "string";
};
js_npm_ws__$WebSocket_Data_$Impl_$.asString = function(this1) {
	if(typeof(this1) != "string") {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(this1) + " to String");
	}
	return this1;
};
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = "Date";
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_lib__$ArrayBuffer_ArrayBufferCompat.sliceImpl;
}
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
Main.mysqlDB = require("mysql");
Main.lastSocketId = 0;
Main.sockets = new haxe_ds_List();
Main.tickets = new haxe_ds_StringMap();
db_User.PEPPER = "REGDQngkIasbXqT2@oWbcx42$ZwWF&@1d1or1k%p1F0YSfmAxHk5vxHJZp5D*Boh";
haxe_crypto_BCrypt.Revision2 = "2";
haxe_crypto_BCrypt.Revision2A = "2a";
haxe_crypto_BCrypt.Revision2B = "2b";
haxe_crypto_BCrypt.Revision2X = "2x";
haxe_crypto_BCrypt.Revision2Y = "2y";
haxe_crypto_BCrypt.BCRYPT_SALT_LEN = 16;
haxe_crypto_BCrypt.P_SZ = 18;
haxe_crypto_BCrypt.S_SZ = 1024;
haxe_crypto_BCrypt.NUM_ROUNDS = 16;
haxe_crypto_BCrypt.CHARS = "./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
haxe_crypto_BCrypt.BYTES = haxe_io_Bytes.ofString(haxe_crypto_BCrypt.CHARS);
haxe_crypto_BCrypt.BF_CRYPT_CIPHERTEXT_ARRAY = [1332899944,1700884034,1701343084,1684370003,1668446532,1869963892];
haxe_crypto_BCrypt.KP_ARRAY = [608135816,-2052912941,320440878,57701188,-1542899678,698298832,137296536,-330404727,1160258022,953160567,-1101764913,887688300,-1062458953,-914599715,1065670069,-1253635817,-1843997223,-1988494565];
haxe_crypto_BCrypt.KS_ARRAY = [-785314906,-1730169428,805139163,-803545161,-1193168915,1780907670,-1166241723,-248741991,614570311,-1282315017,134345442,-2054226922,1667834072,1901547113,-1537671517,-191677058,227898511,1921955416,1904987480,-2112533778,2069144605,-1034266187,-1674521287,720527379,-976113629,677414384,-901678824,-1193592593,-1904616272,1614419982,1822297739,-1340175810,-686458943,-1120842969,2024746970,1432378464,-430627341,-1437226092,1464375394,1676153920,1439316330,715854006,-1261675468,289532110,-1588296017,2087905683,-1276242927,1668267050,732546397,1947742710,-832815594,-1685613794,-1344882125,1814351708,2050118529,680887927,999245976,1800124847,-994056165,1713906067,1641548236,-81679983,1216130144,1575780402,-276538019,-377129551,-601480446,-345695352,596196993,-745100091,258830323,-2081144263,772490370,-1534844924,1774776394,-1642095778,566650946,-152474470,1728879713,-1412200208,1783734482,-665571480,-1777359064,-1420741725,1861159788,326777828,-1170476976,2130389656,-1578015459,967770486,1724537150,-2109534584,-1930525159,1164943284,2105845187,998989502,-529566248,-2050940813,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,-804646328,-619713837,1240580251,122909385,-2137449605,634681816,-152510729,-469872614,-1233564613,-1754472259,79693498,-1045868618,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,-1691314900,-863943356,-1352745719,-1092366332,-567063811,1712269319,422464435,-1060394921,1170764815,-771006663,-1177289765,1434042557,442511882,-694091578,1076654713,1738483198,-81812532,-1901729288,-617471240,1014306527,-43947243,793779912,-1392160085,842905082,-48003232,1395751752,1040244610,-1638115397,-898659168,445077038,-552113701,-717051658,679411651,-1402522938,-1940957837,1767581616,-1144366904,-503340195,-1192226400,284835224,-48135240,1258075500,768725851,-1705778055,-1225243291,-762426948,1274779536,-505548070,-1530167757,1660621633,-823867672,-283063590,913787905,-797008130,737222580,-1780753843,-1366257256,-357724559,1804850592,-795946544,-1345903136,-1908647121,-1904896841,-1879645445,-233690268,-2004305902,-1878134756,1336762016,1754252060,-774901359,-1280786003,791618072,-1106372745,-361419266,-1962795103,-442446833,-1250986776,413987798,-829824359,-1264037920,-49028937,2093235073,-760370983,375366246,-2137688315,-1815317740,555357303,-424861595,2008414854,-950779147,-73583153,-338841844,2067696032,-700376109,-1373733303,2428461,544322398,577241275,1471733935,610547355,-267798242,1432588573,1507829418,2025931657,-648391809,545086370,48609733,-2094660746,1653985193,298326376,1316178497,-1287180854,2064951626,458293330,-1705826027,-703637697,-1130641692,727753846,-2115603456,146436021,1461446943,-224990101,705550613,-1235000031,-407242314,-13368018,-981117340,1404054877,-1449160799,146425753,1854211946,1266315497,-1246549692,-613086930,-1004984797,-1385257296,1235738493,-1662099272,-1880247706,-324367247,1771706367,1449415276,-1028546847,422970021,1963543593,-1604775104,-468174274,1062508698,1531092325,1804592342,-1711849514,-1580033017,-269995787,1294809318,-265986623,1289560198,-2072974554,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,-1214491899,-1437595849,1040679964,2145300060,-1904392980,1461121720,-1338320329,-263189491,-266592508,33600511,-1374882534,1018524850,629373528,-603381315,-779021319,2091462646,-1808644237,586499841,988145025,935516892,-927631820,-1695294041,-1455136442,265290510,-322386114,-1535828415,-499593831,1005194799,847297441,406762289,1314163512,1332590856,1866599683,-167115585,750260880,613907577,1450815602,-1129346641,-560302305,-644675568,-1282691566,-590397650,1427272223,778793252,1343938022,-1618686585,2052605720,1946737175,-1130390852,-380928628,-327488454,-612033030,1661551462,-1000029230,-283371449,840292616,-582796489,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,-2119403562,1594956187,70604529,-677132437,1007753275,1495573769,-225450259,-1745748998,-1631928532,504708206,-2031925904,-353800271,-2045878774,1514023603,1998579484,1312622330,694541497,-1712906993,-2143385130,1382467621,776784248,-1676627094,-971698502,-1797068168,-1510196141,503983604,-218673497,907881277,423175695,432175456,1378068232,-149744970,-340918674,-356311194,-474200683,-1501837181,-1317062703,26017576,-1020076561,-1100195163,1700274565,1756076034,-288447217,-617638597,720338349,1533947780,354530856,688349552,-321042571,1637815568,332179504,-345916010,53804574,-1442618417,-1250730864,1282449977,-711025141,-877994476,-288586052,1617046695,-1666491221,-1292663698,1686838959,431878346,-1608291911,1700445008,1080580658,1009431731,832498133,-1071531785,-1688990951,-2023776103,-1778935426,1648197032,-130578278,-1746719369,300782431,375919233,238389289,-941219882,-1763778655,2019080857,1475708069,455242339,-1685863425,448939670,-843904277,1395535956,-1881585436,1841049896,1491858159,885456874,-30872223,-293847949,1565136089,-396052509,1108368660,540939232,1173283510,-1549095958,-613658859,-87339056,-951913406,-278217803,1699691293,1103962373,-669091426,-2038084153,-464828566,1031889488,-815619598,1535977030,-58162272,-1043876189,2132092099,1774941330,1199868427,1452454533,157007616,-1390851939,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,-1919713727,-698356495,1814182875,2094937945,-873565088,1082520231,-831049106,-1509457788,435703966,-386934699,1641649973,-1452693590,-989067582,1510255612,-2146710820,-1639679442,-1018874748,-36346107,236887753,-613164077,274041037,1734335097,-479771840,-976997275,1899903192,1026095262,-244449504,356393447,-1884275382,-421290197,-612127241,-381855128,-1803468553,-162781668,-1805047500,1091903735,1979897079,-1124832466,-727580568,-737663887,857797738,1136121015,1342202287,507115054,-1759230650,337727348,-1081374656,1301675037,-1766485585,1895095763,1721773893,-1078195732,62756741,2142006736,835421444,-1762973773,1442658625,-635090970,-1412822374,676362277,1392781812,170690266,-373920261,1759253602,-683120384,1745797284,664899054,1329594018,-393761396,-1249058810,2062866102,-1429332356,-751345684,-830954599,1080764994,553557557,-638351943,-298199125,991055499,499776247,1265440854,648242737,-354183246,980351604,-581221582,1749149687,-898096901,-83167922,-654396521,1161844396,-1169648345,1431517754,545492359,-26498633,-795437749,1437099964,-1592419752,-861329053,-1713251533,-1507177898,1060185593,1593081372,-1876348548,-34019326,69676912,-2135222948,86519011,-1782508216,-456757982,1220612927,-955283748,133810670,1090789135,1078426020,1569222167,845107691,-711212847,-222510705,1091646820,628848692,1613405280,-537335645,526609435,236106946,48312990,-1352249391,-892239595,1797494240,859738849,992217954,-289490654,-2051890674,-424014439,-562951028,765654824,-804095931,-1783130883,1685915746,-405998096,1414112111,-2021832454,-1013056217,-214004450,172450625,-1724973196,980381355,-185008841,-1475158944,-1578377736,-1726226100,-613520627,-964995824,1835478071,660984891,-590288892,-248967737,-872349789,-1254551662,1762651403,1719377915,-824476260,-1601057013,-652910941,-1156370552,1364962596,2073328063,1983633131,926494387,-871278215,-2144935273,-198299347,1749200295,-966120645,309677260,2016342300,1779581495,-1215147545,111262694,1274766160,443224088,298511866,1025883608,-488520759,1145181785,168956806,-653464466,-710153686,1689216846,-628709281,-1094719096,1692713982,-1648590761,-252198778,1618508792,1610833997,-771914938,-164094032,2001055236,-684262196,-2092799181,-266425487,-1333771897,1006657119,2006996926,-1108824540,1430667929,-1084739999,1314452623,-220332638,-193663176,-2021016126,1399257539,-927756684,-1267338667,1190975929,2062231137,-1960976508,-2073424263,-1856006686,1181637006,548689776,-1932175983,-922558900,-1190417183,-1149106736,296247880,1970579870,-1216407114,-525738999,1714227617,-1003338189,-396747006,166772364,1251581989,493813264,448347421,195405023,-1584991729,677966185,-591930749,1463355134,-1578971493,1338867538,1343315457,-1492745222,-1610435132,233230375,-1694987225,2000651841,-1017099258,1638401717,-266896856,-1057650976,6314154,819756386,300326615,590932579,1405279636,-1027467724,-1144263082,-1866680610,-335774303,-833020554,1862657033,1266418056,963775037,2089974820,-2031914401,1917689273,448879540,-744572676,-313240200,150775221,-667058989,1303187396,508620638,-1318983944,-1568336679,1817252668,1876281319,1457606340,908771278,-574175177,-677760460,-1838972398,1729034894,1080033504,976866871,-738527793,-1413318857,1522871579,1555064734,1336096578,-746444992,-1715692610,-720269667,-1089506539,-701686658,-956251013,-1215554709,564236357,-1301368386,1781952180,1464380207,-1131123079,-962365742,1699332808,1393555694,1183702653,-713881059,1288719814,691649499,-1447410096,-1399511320,-1101077756,-1577396752,1781354906,1676643554,-1702433246,-1064713544,1126444790,-1524759638,-1661808476,-2084544070,-1679201715,-1880812208,-1167828010,673620729,-1489356063,1269405062,-279616791,-953159725,-145557542,1057255273,2012875353,-2132498155,-2018474495,-1693849939,993977747,-376373926,-1640704105,753973209,36408145,-1764381638,25011837,-774947114,2088578344,530523599,-1376601957,1524020338,1518925132,-534139791,-535190042,1202760957,-309069157,-388774771,674977740,-120232407,2031300136,2019492241,-311074731,-141160892,-472686964,352677332,-1997247046,60907813,90501309,-1007968747,1016092578,-1759044884,-1455814870,457141659,509813237,-174299397,652014361,1966332200,-1319764491,55981186,-1967506245,676427537,-1039476232,-1412673177,-861040033,1307055953,942726286,933058658,-1826555503,-361066302,-79791154,1361170020,2001714738,-1464409218,-1020707514,1222529897,1679025792,-1565652976,-580013532,1770335741,151462246,-1281735158,1682292957,1483529935,471910574,1539241949,458788160,-858652289,1807016891,-576558466,978976581,1043663428,-1129001515,1927990952,-94075717,-1922690386,-1086558393,-761535389,1412390302,-1362987237,-162634896,1947078029,-413461673,-126740879,-1353482915,1077988104,1320477388,886195818,18198404,-508558296,-1785185763,112762804,-831610808,1866414978,891333506,18488651,661792760,1628790961,-409780260,-1153795797,876946877,-1601685023,1372485963,791857591,-1608533303,-534984578,-1127755274,-822013501,-1578587449,445679433,-732971622,-790962485,-720709064,54117162,-963561881,-1913048708,-525259953,-140617289,1140177722,-220915201,668550556,-1080614356,367459370,261225585,-1684794075,-85617823,-826893077,-1029151655,314222801,-1228863650,-486184436,282218597,-888953790,-521376242,379116347,1285071038,846784868,-1625320142,-523005217,-744475605,-1989021154,453669953,1268987020,-977374944,-1015663912,-550133875,-1684459730,-435458233,266596637,-447948204,517658769,-832407089,-851542417,370717030,-47440635,-2070949179,-151313767,-182193321,-1506642397,-1817692879,1456262402,-1393524382,1517677493,1846949527,-1999473716,-560569710,-2118563376,1280348187,1908823572,-423180355,846861322,1172426758,-1007518822,-911584259,1655181056,-1155153950,901632758,1897031941,-1308360158,-1228157060,-847864789,1393639104,373351379,950779232,625454576,-1170726756,-146354570,2007998917,544563296,-2050228658,-1964470824,2058025392,1291430526,424198748,50039436,29584100,-689184263,-1865090967,-1503863136,1057563949,-1039604065,-1219600078,-831004069,1469046755,985887462];
Main.main();
})({});

//# sourceMappingURL=main.js.map